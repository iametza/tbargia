[2015-09-29 17:09:09.715] [INFO] console - [33m
[2015-09-29 17:09:09.718] [INFO] console - ##############################################################
[2015-09-29 17:09:09.718] [INFO] console - #
[2015-09-29 17:09:09.718] [INFO] console - #   !!! MONGOOSE WARNING !!!
[2015-09-29 17:09:09.718] [INFO] console - #
[2015-09-29 17:09:09.718] [INFO] console - #   This is an UNSTABLE release of Mongoose.
[2015-09-29 17:09:09.718] [INFO] console - #   Unstable releases are available for preview/testing only.
[2015-09-29 17:09:09.718] [INFO] console - #   DO NOT run this in production.
[2015-09-29 17:09:09.719] [INFO] console - #
[2015-09-29 17:09:09.719] [INFO] console - ##############################################################
[2015-09-29 17:09:09.719] [INFO] console - [0m
[2015-09-29 17:13:14.215] [INFO] console - [33m
[2015-09-29 17:13:14.538] [DEBUG] ExpressServer - Webserver listening at port 8080
[2015-09-29 17:13:14.217] [INFO] console - ##############################################################
[2015-09-29 17:13:14.217] [INFO] console - #
[2015-09-29 17:13:14.548] [INFO] MongoDB - Connection to DB established
[2015-09-29 17:13:14.217] [INFO] console - #   !!! MONGOOSE WARNING !!!
[2015-09-29 17:13:14.217] [INFO] console - #
[2015-09-29 17:13:14.217] [INFO] console - #   This is an UNSTABLE release of Mongoose.
[2015-09-29 17:13:14.217] [INFO] console - #   Unstable releases are available for preview/testing only.
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with d6026fde4db8afa63a87
[2015-09-29 17:13:14.217] [INFO] console - #   DO NOT run this in production.
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with 4c286bd4304a7063ac22
[2015-09-29 17:13:14.217] [INFO] console - #
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with e2bc2dfd2c472a7a1e0d
[2015-09-29 17:13:14.217] [INFO] console - ##############################################################
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with 5727a76914e1724b67e5
[2015-09-29 17:13:14.218] [INFO] console - [0m
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with e99e058610f2fff97ade
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with bddd6482e9e4b7fff1e2
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with 3fb9915130b4c008c56c
[2015-09-29 17:13:14.578] [INFO] SocketServer - created nsp with 505ade48e8a860c90008
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with ac8ae15c7a977ca195ca
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 36924456e87f89a9e0ea
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 856b0ae4910bf31bed83
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 89438a991047e6dc1cd4
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 4df7ccbabe4c440cb30a
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 0ccb26835c58002ba20e
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 21060f63e2d0bbaa6c9d
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 8e6224d45055b9553b5f
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 9eaded37b25645e1d5f7
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with b5d7ff2333894399fa8e
[2015-09-29 17:13:14.579] [INFO] SocketServer - created nsp with 5e294403681198e3ceed
[2015-09-29 17:13:14.580] [INFO] SocketServer - created nsp with a62186ccc1ea1574299c
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 2d6a45bb0ed152d0b3e4
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 1aae8eb1f7bf39e8e888
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with e74926a3c855e65b2864
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 1579816cd33ac3a576c2
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with d948bd5079868d5fb734
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with b5901875b52dda931f29
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with b61b1d12532254afa05f
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with afffab44da4f02d24921
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 952880581b0aa598ec60
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 1afe3a50d6d874eef0cc
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with daa692a61bbf407c0e3c
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 8d46cf0c519ef74c0d0f
[2015-09-29 17:13:14.581] [INFO] SocketServer - created nsp with 9bb34e0115840e5e54c4
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with 0f52dbf9d145eb82dc0f
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with a641e3ce113ef00a36cf
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with fe16ce6fd70a5fa97fdf
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with 8902c6179b7e842f40cd
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with 26980c2ae6057f50578a
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with fa3dff9e0663ace26fe1
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with 06eaf3200d821a4bcb9f
[2015-09-29 17:13:14.582] [INFO] SocketServer - created nsp with eea0fe26af975ad3f9ec
[2015-09-29 17:13:15.905] [INFO] console - { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 31,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 656,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1443539595894,
     _monotonicStartTime: 28616401,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: 31,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 656,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1443539595894,
     _monotonicStartTime: 28616401,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: '127.0.0.1:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'upgrade-insecure-requests': '1',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36',
     'accept-encoding': 'gzip, deflate, sdch',
     'accept-language': 'es-ES,es;q=0.8,eu;q=0.6',
     cookie: 'mappingAuth=s%3AfiQPodE0HQTMaZ4eqeJo-N1rnVFXa_NV.UYjyGriZcsHYvTjNQhUbY%2BIFl3DYth1y%2BjA1f6VD8WY',
     'if-none-match': 'W/"fg6v3TomlNjBEVQ330p7ng=="' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
  method: 'GET',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: 31,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 656,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1443539595894,
     _monotonicStartTime: 28616401,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  res: 
   { domain: null,
     _events: { finish: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 656,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1443539595894,
        _monotonicStartTime: 28616401,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 656,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1443539595894,
        _monotonicStartTime: 28616401,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     path: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     href: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     _raw: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak' },
  params: 
   { mota_nice_name: 'solasaldiak',
     nice_name: 'aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak' },
  secret: undefined,
  cookies: { mappingAuth: 's:fiQPodE0HQTMaZ4eqeJo-N1rnVFXa_NV.UYjyGriZcsHYvTjNQhUbY+IFl3DYth1y+jA1f6VD8WY' },
  signedCookies: {},
  body: {},
  _parsedOriginalUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     path: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     href: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak',
     _raw: '/solasaldiak/aurrerapausoak-administrazioetako-euskararen-erabilera-planetan-erronka-eta-aukera-berriak' },
  sessionStore: 
   { options: 
      { url: 'mongodb://localhost/session',
        host: '127.0.0.1',
        port: 27017,
        autoReconnect: true,
        ssl: false,
        w: 1,
        collection: 'sessions',
        stringify: true,
        hash: false,
        ttl: 1209600,
        autoRemove: 'native',
        autoRemoveInterval: 10,
        serialize: [Function: stringify],
        unserialize: [Function: parse] },
     getCollection: [Function],
     getSessionId: [Function],
     state: 'connected',
     _events: { disconnect: [Function], connect: [Function] },
     generate: [Function],
     db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     collection: { s: [Object] } },
  sessionID: 'fiQPodE0HQTMaZ4eqeJo-N1rnVFXa_NV',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: false },
     passport: {} },
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  route: 
   { path: '/:mota_nice_name/:nice_name',
     stack: [ [Object] ],
     methods: { get: true } } }
